#!/bin/sh

# This script does the following:
#   Run by itself, set the wallpaper (at X start).
#   If given a file, set that as the new wallpaper.
#   If given a directory, choose a random file in it.
#   If wal is installed, also generates a colorscheme.

# Location of the link to the wallpaper.
bg_link="$XDG_DATA_HOME/bg"

# Set the wallpaper to the given file.
if [ -f "$1" ]; then
  ln -sf "$(readlink -f "$1")" "$bg_link"
  notify-send -i "$bg_link" "Changing wallpaper..."
fi

# Set the wallpaper to a random file in the given directory.
if [ -d "$1" ]; then
  ln -sf "$(find "$(readlink -f "$1")" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bg_link"
  notify-send -i "$bg_link" "Random wallpaper chosen."
fi

# Use pywal if it is installed.
if command -v wal >/dev/null 2>&1; then
  wal -i "$(readlink -f "$bg_link")" -o "${XDG_CONFIG_HOME:-$HOME/.config}/wal/postrun" >/dev/null 2>&1
fi

# Press the "super+F12" keys if dwm is running.
if pidof dwm >/dev/null; then
  xdotool key super+F12
fi

# Get the correct scaling for the wallpaper on each connected display.
for display in $(xrandr | grep " connected " | cut -d ' ' -f1); do
  resolution="$(xrandr | awk '{
    if(/^'$display'/) {
      print $0;
      m="t";
    } else if(m == "t"){
      if (/^[a-zA-Z]/){
        exit
      } else {
        print $0
      }
    }
  }' | grep '*' | cut -d ' ' -f4)"
  width="$(echo "$resolution" | cut -d 'x' -f1)"
  height="$(echo "$resolution" | cut -d 'x' -f2)"

  bg_dim=$(identify -format "%w %h" "${bg_link}")
  if [ "$(echo $bg_dim | cut -d ' ' -f1)" -ge "$width" -a "$(echo $bg_dim | cut -d ' ' -f2)" -ge "$height" ]; then
    xw_arg="$xw_arg --output $display --zoom $bg_link"
  else
    xw_arg="$xw_arg --output $display --maximize $bg_link"
  fi
done

# Set the wallpaper using the calculated arguments.
xwallpaper $xw_arg
