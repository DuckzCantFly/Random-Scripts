#!/bin/sh

# This script is an alias for the `rm` command, with additional functionality.
# If the `rm` command fails, the script prompts the user to perform a `rmdir`
# or `rm -r` operation instead.

# Remove the specified files and directories using the `rm` command.
remove_with_rm() {
  if rm -vI "$@"; then
    exit
  fi
}

# Remove the specified directories using the `rmdir` command.
remove_with_rmdir() {
  echo "Preform \"rmdir $*\" instead? "
  read -r -p '[y/N]: ' rmdir_answer

  if [ "$rmdir_answer" != "${rmdir_answer#[Yy]}" ]; then
    if rmdir "$@"; then
      echo "Removed directory"
      exit
    fi
  fi
}

# Remove the specified files and directories, along with their contents, using
# the `rm -r` command.
remove_with_rm_r() {
  echo "Preform \"rm -r $*\"  insted? "
  read -r -p '[y/N]: ' rm_r_answer

  if [ "$rm_r_answer" != "${rm_r_answer#[Yy]}" ]; then
    if rm -r "$@"; then
      echo "Removed directory and contents"
      exit
    fi
  fi
}

# Attempt to remove the specified files and directories with the `rm` command.
remove_with_rm "$@"

# If the `rm` operation failed, prompt the user to perform a `rmdir` operation.
remove_with_rmdir "$@"

# If the `rmdir` operation failed or was not performed, prompt the user to
# perform a `rm -r` operation instead.
remove_with_rm_r "$@"

# If the `rm -r` operation failed or was not performed, inform the user that
# the script has been canceled.
echo "rm -r $* canceled"
