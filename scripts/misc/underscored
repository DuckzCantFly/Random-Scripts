#!/bin/sh

# This script renames files and directories in a specified directory with underscores.
#
# The following arguments can be used to customize the behavior of the script:
#   -f: Only rename files (skip directories)
#   -d: Only rename directories (skip files)
#   -r: Rename files and directories recursively (includes subdirectories)
#
# If no arguments are provided, the script will rename files and directories in the
# current directory (excluding subdirectories) by default.

# Main function that calls other functions
main() {
  parse_arguments "$@"
  find_and_rename
}

# Parse arguments
parse_arguments() {
  temp=$(getopt -o 'rRfd' -n underscored -- "$@")
  eval set -- "${temp}"
  unset temp

  # Parse directory name
  dir_name="$(echo "$@" | sed 's/^\(.*\)\--\(.*\)$/\2/' | xargs -I % readlink -e %)"
  echo "${dir_name}"

  # Figure out arguments
  while true; do
    case $1 in
      '-f')
        file_type="-type f"
        shift
        continue
        ;;
      '-d')
        file_type="-type d"
        shift
        continue
        ;;
      '-r'|'-R')
        recursive="-depth"
        shift
        continue
        ;;
      '--')
        break
        ;;
      *)
    esac
  done

  # Set defaults for unset variables
  [ -z "${recursive}" ] && recursive="-maxdepth 1"
  [ -z "${dir_name}" ] && dir_name="$(pwd)"
}

# Function to rename file or directory with underscores
rename_with_underscores() {
  # Create new name with underscores
  new_name="$(dirname "${1}")/$(echo "$(basename "${1}")" | tr -s " " | tr " " "_")"

  # Only rename if the new name is different from the old name
  if [ "${new_name}" != "${1}" ]; then
    # Don't rename if the new name already exists
    if [ -e "${new_name}" ]; then
      echo not renaming "${1}" because "${new_name}" already exists
    else
      # Rename file or directory
      mv "${1}" "${new_name}" && echo moving "${1}" to "${new_name}"
    fi
  fi
}

# Find and rename everything with underscores
find_and_rename() {
  find "${dir_name}" -mindepth 1 ${recursive} ${file_type} -exec sh -c 'rename_with_underscores "${1}"' _ {} \;
}

# Call main function
main "$@"
